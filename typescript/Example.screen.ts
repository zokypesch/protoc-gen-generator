
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto_example
// File Location: api/Simple.ts

import React from 'react'
import {CustomNavigationProps} from '../types'
import {mapStateToProps, mapDispatchToProps, TypeAllProps} from '../../store/Props'
import {connect} from 'react-redux';
import { NavigationStackScreenProps } from "react-navigation-stack";
import {defaultProps} from "../../store/api/ApiConfig"
import {getAllResponse, getAllDetail} from "../../store/api/Inbox"
import Api, { helloWorldMessage, OutputHelloWorld } from '../../store/api/Simple'
import {generalResponseWithoutType} from '../../store/api/General'
import CrashReport from '../../service/CrashPush'
import {View} from 'react-native'
import styles from './styles'

const Simple = (props: NavigationStackScreenProps<CustomNavigationProps<null>> & TypeAllProps) => {
	const [listStateHelloWorld, setListStateHelloWorld ] = React.useState<OutputHelloWorld>({loading: false, error: null, isRefreshing: false})

	const callbackUnauthorize = () => {
        props.navigation.navigate("LoginScreen")
	}

	const getPropsParams = (): defaultProps => {
		return {
			token: props.auth.token,
			callBackUnauthorize: callbackUnauthorize
		} as defaultProps
	}
	async function getActionHelloWorld() {
		const act = new Api(getPropsParams())
		setListStateHelloWorld({...listStateHelloWorld, loading: true })
		let res:generalResponseWithoutType<OutputHelloWorld> = act.HelloWorld()

		res.then(dt => {
			if (dt.status !== 200) {
				alert("error !!")
				setListStateHelloWorld({loading: false, error: "there is something wrong", ...listStateHelloWorld})
				return
			} 
			setListStateHelloWorld({loading: false, error: null, data: dt.data.data, isRefreshing: false})
		}).catch(error => {
			CrashReport(1, error.toString())
			setListStateHelloWorld({loading: false, error: "there is something wrong", ...listStateHelloWorld})
		})
	}
}

export default connect(
    mapStateToProps,
    mapDispatchToProps
)(Simple);


